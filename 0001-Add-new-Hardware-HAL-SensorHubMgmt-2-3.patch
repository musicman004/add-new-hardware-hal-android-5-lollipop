From 0a30035f05b7e694fa4e42b4dd48e0c46e4cfe55 Mon Sep 17 00:00:00 2001
From: Boyan Vladinov <nayobix@nayobix.org>
Date: Wed, 21 Jan 2015 14:23:53 +0200
Subject: [PATCH] Add new Hardware HAL - SensorHubMgmt - [2/3]

Signed-off-by: Boyan Vladinov <nayobix@nayobix.org>
---
 include/hardware/sensorhubmgmt.h        | 36 ++++++++++++++
 modules/Android.mk                      |  2 +-
 modules/sensorhubmgmt/Android.mk        | 47 ++++++++++++++++++
 modules/sensorhubmgmt/sensorhubmgmt.cpp | 85 +++++++++++++++++++++++++++++++++
 4 files changed, 169 insertions(+), 1 deletion(-)
 create mode 100644 include/hardware/sensorhubmgmt.h
 create mode 100644 modules/sensorhubmgmt/Android.mk
 create mode 100644 modules/sensorhubmgmt/sensorhubmgmt.cpp

diff --git a/include/hardware/sensorhubmgmt.h b/include/hardware/sensorhubmgmt.h
new file mode 100644
index 0000000..19e2331
--- /dev/null
+++ b/include/hardware/sensorhubmgmt.h
@@ -0,0 +1,36 @@
+#ifndef ANDROID_SENSORHUBMGMT_INTERFACE_H
+#define ANDROID_SENSORHUBMGMT_INTERFACE_H
+
+#include <stdint.h>
+#include <sys/cdefs.h>
+#include <sys/types.h>
+#include <hardware/hardware.h>
+
+__BEGIN_DECLS
+
+#define SENSORHUBMGMT_MODULE_API_VERSION_1_0 HARDWARE_MODULE_API_VERSION(1, 0)
+#define SENSORHUBMGMT_HARDWARE_MODULE_ID "sensorhubmgmt"
+
+
+struct sensorhubmgmt_device_t {
+
+    struct hw_device_t common;
+
+    int (*read)(char* buffer, int length);
+    int (*write)(char* buffer, int length);
+    int (*test)(int value);
+
+};
+
+/**                                                                             
+ * Every hardware module must have a data structure named HAL_MODULE_INFO_SYM   
+ * and the fields of this data structure must begin with hw_module_t            
+ * followed by module specific information.                                     
+ */                                                                             
+struct sensorhubmgmt_module_t {                                                       
+    struct hw_module_t common;                                                  
+};
+
+__END_DECLS
+
+#endif // ANDROID_SENSORHUBMGMT_INTERFACE_H
diff --git a/modules/Android.mk b/modules/Android.mk
index 0725d3e..ddc6e8f 100644
--- a/modules/Android.mk
+++ b/modules/Android.mk
@@ -1,4 +1,4 @@
 hardware_modules := gralloc hwcomposer audio nfc nfc-nci local_time \
 	power usbaudio audio_remote_submix camera consumerir sensors vibrator \
-	tv_input fingerprint
+	tv_input fingerprint sensorhubmgmt
 include $(call all-named-subdir-makefiles,$(hardware_modules))
diff --git a/modules/sensorhubmgmt/Android.mk b/modules/sensorhubmgmt/Android.mk
new file mode 100644
index 0000000..1fd74fc
--- /dev/null
+++ b/modules/sensorhubmgmt/Android.mk
@@ -0,0 +1,47 @@
+#
+# Copyright (C) 2013 The Android Open-Source Project
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+#
+
+LOCAL_PATH := $(call my-dir)
+
+include $(CLEAR_VARS)
+
+LOCAL_MODULE := sensorhubmgmt.$(TARGET_DEVICE)
+
+LOCAL_MODULE_PATH := $(TARGET_OUT_SHARED_LIBRARIES)/hw
+
+LOCAL_CFLAGS := -DLOG_TAG=\"SensorHubMgmt\"
+
+LOCAL_SRC_FILES := \
+    sensorhubmgmt.cpp \
+
+LOCAL_SHARED_LIBRARIES := \
+    libcutils \
+    libdl \
+    liblog \
+    libstlport \
+    libutils \
+
+LOCAL_PRELINK_MODULE := false
+LOCAL_STRIP_MODULE := false
+
+LOCAL_C_INCLUDES := \
+    bionic \
+
+LOCAL_LDLIBS  := -llog
+
+include $(BUILD_SHARED_LIBRARY)
+
+include $(call all-makefiles-under, $(LOCAL_PATH))
diff --git a/modules/sensorhubmgmt/sensorhubmgmt.cpp b/modules/sensorhubmgmt/sensorhubmgmt.cpp
new file mode 100644
index 0000000..2a67eda
--- /dev/null
+++ b/modules/sensorhubmgmt/sensorhubmgmt.cpp
@@ -0,0 +1,85 @@
+#include <errno.h>
+
+#include <cutils/sockets.h>
+#include <sys/types.h>
+#include <sys/stat.h>
+#include <fcntl.h>
+#include <hardware/sensorhubmgmt.h>
+
+#define LOG_NDEBUG 1
+#include <cutils/log.h>
+
+//static const char THE_DEVICE[] = "/sys/fs/entry";
+static const char THE_DEVICE[] = "/data/sensorhubmgmt.txt";
+
+int sensorhubmgmt__read(char* buffer, int length)
+{
+    int retval, fd;
+    ALOGV("read()for %d bytes called", length);
+    fd = open(THE_DEVICE, O_RDWR|O_CREAT, 777);
+    
+    if (fd < 0) {
+        ALOGE("Error open file: %s - %s", THE_DEVICE, strerror(errno));
+        return errno;
+    }
+
+    retval = read(fd, buffer, length);
+
+    close(fd);
+
+    return retval;
+}
+int sensorhubmgmt__write(char* buffer, int length)
+{
+    int retval, fd;
+    ALOGV("write()for %d bytes called", length);
+    fd = open(THE_DEVICE, O_RDWR|O_CREAT, 777);
+
+    if (fd < 0) {
+        ALOGE("Error open file: %s - %s", THE_DEVICE, strerror(errno));
+        return errno;
+    }
+
+    retval = write(fd, buffer, length);
+
+    close(fd);
+
+    return retval;
+}
+int sensorhubmgmt__test(int value)
+{
+    ALOGV("test()for %d", value);
+    return value;
+}
+static int open_sensorhubmgmt(const struct hw_module_t* module, char const* name,
+struct hw_device_t** device)
+{
+    struct sensorhubmgmt_device_t *dev = (sensorhubmgmt_device_t*) malloc(sizeof(struct sensorhubmgmt_device_t));
+    memset(dev, 0, sizeof(*dev));
+    dev->common.tag = HARDWARE_DEVICE_TAG;
+    dev->common.version = HARDWARE_DEVICE_API_VERSION(1,0);
+    dev->common.module = (struct hw_module_t*)module;
+    dev->read = sensorhubmgmt__read;
+    dev->write = sensorhubmgmt__write;
+    dev->test = sensorhubmgmt__test;
+    *device = (struct hw_device_t*) dev;
+    ALOGI("[%s] has been initialized", LOG_TAG);
+    return 0;
+}
+static struct hw_module_methods_t sensorhubmgmt_module_methods = {
+    .open = open_sensorhubmgmt
+};
+
+struct sensorhubmgmt_module_t HAL_MODULE_INFO_SYM = {                                 
+        common: {                                                               
+                tag: HARDWARE_MODULE_TAG,                                       
+                module_api_version: SENSORHUBMGMT_MODULE_API_VERSION_1_0,                                               
+                hal_api_version: HARDWARE_HAL_API_VERSION,                                               
+                id: SENSORHUBMGMT_HARDWARE_MODULE_ID,                                 
+                name: "Sensor Hub Management Module",                                      
+                author: "nayobix.org",                                   
+                methods: &sensorhubmgmt_module_methods,                               
+                dso: 0,                                                         
+                reserved: {},                                                   
+        },                                                                      
+}; 
-- 
2.0.0

